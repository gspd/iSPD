/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gspd.ispd.gui;

import java.awt.Color;
import java.io.File;
import java.util.ResourceBundle;

import javax.swing.JFileChooser;

import gspd.ispd.gui.configuracao.WorkLoadTable;
import gspd.ispd.motor.carga.CargaDAG;
import gspd.ispd.motor.carga.CargaForNode;
import gspd.ispd.motor.carga.GerarCarga;

/**
 *
 * @author user
 */
public class JConfigForNode extends javax.swing.JPanel {

    private final int BOT = 1;
    private final int DAG = 2;
    private int type = BOT;
    private final ResourceBundle palavras;
    private JFileChooser jDAGFileChooser;

    /**
     * Creates new form JConfigForNode
     *
     * @param palavras
     */
    public JConfigForNode(ResourceBundle palavras) {
        this.palavras = palavras;
        initComponents();
        jScrollPaneConfig.setViewportView(jPanelBoT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelBoT = new javax.swing.JPanel();
        jLabelMin = new javax.swing.JLabel();
        jTextFieldMinComp = new javax.swing.JFormattedTextField();
        jLabelMax = new javax.swing.JLabel();
        jTextFieldMaxComp = new javax.swing.JFormattedTextField();
        jLabelComp = new javax.swing.JLabel();
        jTextFieldMaxComu = new javax.swing.JFormattedTextField();
        jLabelComu = new javax.swing.JLabel();
        jTextFieldMinComu = new javax.swing.JFormattedTextField();
        workLoadTable1 = new gspd.ispd.gui.configuracao.WorkLoadTable();
        jPanelDAG = new javax.swing.JPanel();
        jDAGFile = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jLabelUser = new javax.swing.JLabel();
        jLabelNumberOfTasks = new javax.swing.JLabel();
        jSpinnerNumTarefas = new javax.swing.JSpinner();
        jComboBoxUsers = new javax.swing.JComboBox();
        jComboBoxSchedulers = new javax.swing.JComboBox();
        jLabelScheduler = new javax.swing.JLabel();
        jLabelBoT = new javax.swing.JLabel();
        jLabelDAG = new javax.swing.JLabel();
        jButtonAddTable = new javax.swing.JButton();
        jButtonRemoveTable = new javax.swing.JButton();
        jButtonEditTable = new javax.swing.JButton();
        jScrollPaneCarga = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPaneConfig = new javax.swing.JScrollPane();

        jPanelBoT.setBackground(new java.awt.Color(255, 255, 255));
        jPanelBoT.setMaximumSize(new java.awt.Dimension(200, 75));
        jPanelBoT.setMinimumSize(new java.awt.Dimension(200, 75));
        jPanelBoT.setPreferredSize(new java.awt.Dimension(200, 75));

        jLabelMin.setText(palavras.getString("Minimum")); // NOI18N

        jTextFieldMinComp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jTextFieldMinComp.setText("100");

        jLabelMax.setText(palavras.getString("Maximum")); // NOI18N

        jTextFieldMaxComp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jTextFieldMaxComp.setText("100");

        jLabelComp.setText(palavras.getString("Computational")); // NOI18N

        jTextFieldMaxComu.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jTextFieldMaxComu.setText("100");

        jLabelComu.setText(palavras.getString("Communication")); // NOI18N

        jTextFieldMinComu.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jTextFieldMinComu.setText("100");

        javax.swing.GroupLayout jPanelBoTLayout = new javax.swing.GroupLayout(jPanelBoT);
        jPanelBoT.setLayout(jPanelBoTLayout);
        jPanelBoTLayout.setHorizontalGroup(
            jPanelBoTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBoTLayout.createSequentialGroup()
                .addGroup(jPanelBoTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3)
                .addGroup(jPanelBoTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextFieldMinComp)
                    .addComponent(jTextFieldMaxComp, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelComp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3)
                .addGroup(jPanelBoTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextFieldMaxComu, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelComu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldMinComu)))
        );
        jPanelBoTLayout.setVerticalGroup(
            jPanelBoTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBoTLayout.createSequentialGroup()
                .addGroup(jPanelBoTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelComp)
                    .addComponent(jLabelComu))
                .addGap(3, 3, 3)
                .addGroup(jPanelBoTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldMaxComp)
                    .addComponent(jTextFieldMaxComu))
                .addGap(3, 3, 3)
                .addGroup(jPanelBoTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMinComp)
                    .addComponent(jTextFieldMinComu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanelDAG.setBackground(new java.awt.Color(255, 255, 255));
        jPanelDAG.setPreferredSize(new java.awt.Dimension(200, 75));

        jDAGFile.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jDAGFile.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "---" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jDAGFile.setEnabled(false);

        jButton1.setText(palavras.getString("Select a DAG model")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDAGLayout = new javax.swing.GroupLayout(jPanelDAG);
        jPanelDAG.setLayout(jPanelDAGLayout);
        jPanelDAGLayout.setHorizontalGroup(
            jPanelDAGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDAGLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDAGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDAGFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelDAGLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 55, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelDAGLayout.setVerticalGroup(
            jPanelDAGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDAGLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDAGFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setPreferredSize(new java.awt.Dimension(470, 300));
        setRequestFocusEnabled(false);

        jLabelUser.setText(palavras.getString("User")); // NOI18N

        jLabelNumberOfTasks.setText(palavras.getString("Tasks")); // NOI18N

        jSpinnerNumTarefas.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        jLabelScheduler.setText(palavras.getString("Scheduler")); // NOI18N

        jLabelBoT.setBackground(new java.awt.Color(255, 255, 255));
        jLabelBoT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBoT.setText("BoT");
        jLabelBoT.setOpaque(true);
        jLabelBoT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBoTMouseClicked(evt);
            }
        });

        jLabelDAG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDAG.setText("DAG");
        jLabelDAG.setOpaque(true);
        jLabelDAG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelDAGMouseClicked(evt);
            }
        });

        jButtonAddTable.setText(palavras.getString("Add")); // NOI18N
        jButtonAddTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTableActionPerformed(evt);
            }
        });

        jButtonRemoveTable.setText(palavras.getString("Remove")); // NOI18N
        jButtonRemoveTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveTableActionPerformed(evt);
            }
        });

        jButtonEditTable.setText(palavras.getString("Edit")); // NOI18N
        jButtonEditTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditTableActionPerformed(evt);
            }
        });

        jTable1.setModel(workLoadTable1);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPaneCarga.setViewportView(jTable1);

        jScrollPaneConfig.setBorder(null);
        jScrollPaneConfig.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneConfig.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPaneConfig.setMaximumSize(new java.awt.Dimension(200, 75));
        jScrollPaneConfig.setMinimumSize(new java.awt.Dimension(200, 75));
        jScrollPaneConfig.setName(""); // NOI18N
        jScrollPaneConfig.setPreferredSize(new java.awt.Dimension(200, 75));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonAddTable, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                            .addComponent(jComboBoxUsers, javax.swing.GroupLayout.Alignment.LEADING, 0, 66, Short.MAX_VALUE)
                            .addComponent(jLabelUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelScheduler, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(jComboBoxSchedulers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonRemoveTable, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonEditTable, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jSpinnerNumTarefas)
                            .addComponent(jLabelNumberOfTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jLabelDAG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPaneConfig, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelBoT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(103, 103, 103)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelScheduler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelNumberOfTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelBoT)
                    .addComponent(jLabelDAG))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSchedulers, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerNumTarefas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonAddTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonRemoveTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonEditTable)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE))
                    .addComponent(jScrollPaneConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPaneCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTableActionPerformed
        String user = jComboBoxUsers.getSelectedItem().toString();
        String scheduler = jComboBoxSchedulers.getSelectedItem().toString();
        String app = "App_" + workLoadTable1.getRowCount();
        Integer tasks = (Integer) jSpinnerNumTarefas.getValue();
        switch (type) {
            case BOT:
                app += "_BoT";
                Double maxComputacao = Double.valueOf(jTextFieldMaxComp.getValue().toString());
                Double minComputacao = Double.valueOf(jTextFieldMinComp.getValue().toString());
                Double maxComunicacao = Double.valueOf(jTextFieldMaxComu.getValue().toString());
                Double minComunicacao = Double.valueOf(jTextFieldMinComu.getValue().toString());
                workLoadTable1.getCargaList().getList().add(
                        new CargaForNode(app, user, scheduler, tasks,
                                maxComputacao,
                                minComputacao,
                                maxComunicacao,
                                minComunicacao));
                break;
            case DAG:
                app += "_DAG";
                if (jDAGFile.getModel().getElementAt(0) instanceof File) {
                    workLoadTable1.getCargaList().getList().add(
                            new CargaDAG(app, user, scheduler, tasks, 1,
                                    (File) jDAGFile.getModel().getElementAt(0))
                    );
                }
                break;
        }
        workLoadTable1.fireTableDataChanged();
    }//GEN-LAST:event_jButtonAddTableActionPerformed

    private void jButtonRemoveTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveTableActionPerformed
        int linha = jTable1.getSelectedRow();
        if (linha >= 0 && linha < workLoadTable1.getRowCount()) {
            workLoadTable1.getCargaList().getList().remove(linha);
        }
        workLoadTable1.fireTableDataChanged();
        if (linha >= 0 && linha < workLoadTable1.getRowCount()) {
            jTable1.getSelectionModel().setSelectionInterval(linha, linha);
        }
    }//GEN-LAST:event_jButtonRemoveTableActionPerformed

    private void jButtonEditTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditTableActionPerformed
        int linha = jTable1.getSelectedRow();
        if (linha >= 0 && linha < workLoadTable1.getRowCount()) {
            Object temp = workLoadTable1.getCargaList().getList().get(linha);
            if (temp instanceof CargaForNode && type == BOT) {
                CargaForNode item = (CargaForNode) temp;
                item.setProprietario(jComboBoxUsers.getSelectedItem().toString());
                item.setEscalonador(jComboBoxSchedulers.getSelectedItem().toString());
                item.setNumeroTarefas((Integer) jSpinnerNumTarefas.getValue());
                item.setMaxComputacao(Double.valueOf(jTextFieldMaxComp.getValue().toString()));
                item.setMinComputacao(Double.valueOf(jTextFieldMinComp.getValue().toString()));
                item.setMaxComunicacao(Double.valueOf(jTextFieldMaxComu.getValue().toString()));
                item.setMinComunicacao(Double.valueOf(jTextFieldMinComu.getValue().toString()));
                workLoadTable1.fireTableDataChanged();
            } else if (temp instanceof CargaDAG && type == DAG) {
                CargaDAG dag = (CargaDAG) temp;
                dag.setProprietario(jComboBoxUsers.getSelectedItem().toString());
                dag.setEscalonador(jComboBoxSchedulers.getSelectedItem().toString());
                dag.setNumeroTarefas((Integer) jSpinnerNumTarefas.getValue());
                if (jDAGFile.getModel().getElementAt(0) instanceof File) {
                    dag.setArquivo((File) jDAGFile.getModel().getElementAt(0));
                }
                workLoadTable1.fireTableDataChanged();
            }
        }
    }//GEN-LAST:event_jButtonEditTableActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int returnVal = jDAGFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            Object[] data = {jDAGFileChooser.getSelectedFile()};
            jDAGFile.setListData(data);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabelBoTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBoTMouseClicked
        type = BOT;
        jLabelBoT.setBackground(Color.white);
        jLabelDAG.setBackground(Color.lightGray);
        jScrollPaneConfig.setViewportView(jPanelBoT);
    }//GEN-LAST:event_jLabelBoTMouseClicked

    private void jLabelDAGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelDAGMouseClicked
        type = DAG;
        jLabelBoT.setBackground(Color.lightGray);
        jLabelDAG.setBackground(Color.white);
        jScrollPaneConfig.setViewportView(jPanelDAG);
    }//GEN-LAST:event_jLabelDAGMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int linha = jTable1.getSelectedRow();
        if (linha >= 0 && linha < workLoadTable1.getRowCount()) {
            switch (workLoadTable1.getCargaList().getList().get(linha).getTipo()) {
                case GerarCarga.FORNODE:
                    CargaForNode item = (CargaForNode) workLoadTable1.getCargaList().getList().get(linha);
                    jComboBoxUsers.setSelectedItem(item.getProprietario());
                    jComboBoxSchedulers.setSelectedItem(item.getEscalonador());
                    jSpinnerNumTarefas.setValue(item.getNumeroTarefas());
                    jTextFieldMaxComp.setValue(item.getMaxComputacao());
                    jTextFieldMinComp.setValue(item.getMinComputacao());
                    jTextFieldMaxComu.setValue(item.getMaxComunicacao());
                    jTextFieldMinComu.setValue(item.getMinComunicacao());
                    jLabelBoTMouseClicked(null);
                    break;
                case GerarCarga.DAG:
                    CargaDAG dag = (CargaDAG) workLoadTable1.getCargaList().getList().get(linha);
                    jComboBoxUsers.setSelectedItem(dag.getProprietario());
                    jComboBoxSchedulers.setSelectedItem(dag.getEscalonador());
                    jSpinnerNumTarefas.setValue(dag.getNumeroTarefas());
                    Object[] data = {dag.getArquivo()};
                    jDAGFile.setListData(data);
                    jLabelDAGMouseClicked(null);
                    break;
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    public void addUser(String user) {
        jComboBoxUsers.addItem(user);
    }

    public void addScheduler(String scheduler) {
        jComboBoxSchedulers.addItem(scheduler);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddTable;
    private javax.swing.JButton jButtonEditTable;
    private javax.swing.JButton jButtonRemoveTable;
    private javax.swing.JComboBox jComboBoxSchedulers;
    private javax.swing.JComboBox jComboBoxUsers;
    private javax.swing.JList jDAGFile;
    private javax.swing.JLabel jLabelBoT;
    private javax.swing.JLabel jLabelComp;
    private javax.swing.JLabel jLabelComu;
    private javax.swing.JLabel jLabelDAG;
    private javax.swing.JLabel jLabelMax;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JLabel jLabelNumberOfTasks;
    private javax.swing.JLabel jLabelScheduler;
    private javax.swing.JLabel jLabelUser;
    private javax.swing.JPanel jPanelBoT;
    private javax.swing.JPanel jPanelDAG;
    private javax.swing.JScrollPane jScrollPaneCarga;
    private javax.swing.JScrollPane jScrollPaneConfig;
    private javax.swing.JSpinner jSpinnerNumTarefas;
    private javax.swing.JTable jTable1;
    private javax.swing.JFormattedTextField jTextFieldMaxComp;
    private javax.swing.JFormattedTextField jTextFieldMaxComu;
    private javax.swing.JFormattedTextField jTextFieldMinComp;
    private javax.swing.JFormattedTextField jTextFieldMinComu;
    private gspd.ispd.gui.configuracao.WorkLoadTable workLoadTable1;
    // End of variables declaration//GEN-END:variables

    public WorkLoadTable getTable() {
        return workLoadTable1;
    }

    public void setDAGFileChooser(JFileChooser jOpenTrace) {
        jDAGFileChooser = jOpenTrace;
    }
}
